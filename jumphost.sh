#!/bin/bash
# sed -i -e 's/\r$//' scriptname.sh
export INTERACTIVE=${INTERACTIVE:="true"}
export PVS=${INTERACTIVE:="true"}
export RHUSER=${RHUSER:=}
export RHPW=${RHPW:=}
export DOMAIN=${DOMAIN:=vs.com}
export NWINTF=${NWINTF:=ens192}
export OCPPOOLID=${OCPPOOLID:=8a85f99c6c0f63ae016c209856a61d4f}
export DNSIP=${DNSIP:="$(ip route get 8.8.8.8 | awk '{print $NF; exit}')"}

declare -a ar_ocp_masters

## Make the script interactive to set the variables
if [ "$INTERACTIVE" = "true" ]; then

        read -rp "Red Hat Username: " choice;
        if [ "$choice" != "" ] ; then
                export RHUSER="$choice";
        fi

        read -rp "Red Hat Password: " choice;
        if [ "$choice" != "" ] ; then
                export RHPW="$choice";
        fi

        read -rp "Domain: ($DOMAIN): " choice;
        if [ "$choice" != "" ] ; then
                export DOMAIN="$choice";
        fi

        read -rp "OCP Pool ID: ($OCPPOOLID): " choice;
        if [ "$choice" != "" ] ; then
                export OCPPOOLID="$choice";
        fi

        read -rp "Network Interface: ($NWINTF): " choice;
        if [ "$choice" != "" ] ; then
                export NWINTF="$choice";
        fi

        read -rp "OpenShift Master (only hostname not including domain): " choice;
        if [ "$choice" != "" ] ; then
                ar_ocp_masters=($choice)
        fi
        
        while : ; do
          read -rp "Do you want to add more master? (Yes/No): " choice;
          if [ "$choice" = "No" ] ; then
            break
          else
            read -rp "OpenShift Master (only hostname not including domain): " choice;
            if [ "$choice" != "" ] ; then
                ar_ocp_masters+=("$choice")
            fi            
          fi
         
        done

fi

echo "******"
echo "* Your DNS IP is $DNSIP "
echo "* Your Red Hat username is $RHUSER "
echo "* Your Red Hat password is $RHPW "
echo "* Your Domain is $DOMAIN "
echo "* Your Network Interface is $NWINTF "
echo "${ar_ocp_masters[@]}"
echo "******"

export BOL=${BOL:=ques}

## Make the script interactive to set the variables
if [ "$INTERACTIVE" = "true" ]; then

        read -rp "Do you want to continue? (Yes/No): " choice;
        if [ "$choice" = "No" ] ; then
                echo "User exited!"
                exit 0
        fi
fi

# subscription-manager register
subscription-manager clean
#echo "subscription-manager register --username $RHUSER --password $RHPW --auto-attach"
subscription-manager register --username $RHUSER --password $RHPW --auto-attach
#subscription-manager list --available --matches '*OpenShift*'
subscription-manager refresh
subscription-manager attach --pool=$OCPPOOLID
subscription-manager repos --disable='*' --enable='rhel-7-server-extras-rpms' --enable='rhel-7-server-optional-rpms'
subscription-manager repos --enable="rhel-7-server-rpms" --enable="rhel-7-server-extras-rpms" --enable="rhel-7-server-ose-3.11-rpms" --enable="rhel-7-server-ansible-2.6-rpms"

yum -y install wget git net-tools bind-utils iptables-services bridge-utils bash-completion kexec-tools sos psacct
yum -y update
# reboot

yum install -y docker-1.13.1-75.git8633870.el7_5.x86_64
yum -y install openshift-ansible

yum -y install dnsmasq

# Update Network
echo "Update Network"
echo "'s/DNS1=.*/DNS1='"$DNSIP"'/g' /etc/sysconfig/network-scripts/ifcfg-$NWINTF"
sed -i 's/DNS1=.*/DNS1='"$DNSIP"'/g' /etc/sysconfig/network-scripts/ifcfg-$NWINTF

# Restart Network
systemctl restart network
echo "Update SeLinux"
echo "'s/SELINUX=disabled/SELINUX=enforcing/g' /etc/selinux/config"
sed -i 's/SELINUX=disabled/SELINUX=enforcing/g' /etc/selinux/config

# Proxy
cat <<EOF > /etc/environment
http_proxy="http://10.131.236.9:3128"
https_proxy="https://10.131.236.9:3128"
no_proxy=.$DOMAIN,172.30.0.1,.cluster.local,.svc,localhost,127.0.0.1
EOF

#------ Update resolv.conf with local DNS -----#
cat <<EOF > /etc/resolv.conf
# Generated by NetworkManager
nameserver $DNSIP
nameserver 10.131.236.54
nameserver 8.8.8.8
EOF

#------ Update resolv.conf with local DNS -----#
cat <<EOF > /etc/ansible/hosts
[mons]
master01.vs.com
master02.vs.com
master03.vs.com

[osds]
ceph-osd01.vs.com devices="[ '/dev/sdb' ]"
ceph-osd02.vs.com devices="[ '/dev/sdb' ]"
ceph-osd03.vs.com devices="[ '/dev/sdb' ]"

[mgrs]
master01.vs.com
master02.vs.com
master03.vs.com

[clients]
master01.vs.com
master02.vs.com
master03.vs.com

[rgws]
master01.vs.com
master02.vs.com
master03.vs.com

[ceph-grafana]
ceph-dashb.vs.com

[ceph]
master01.vs.com
master02.vs.com
master03.vs.com
ceph-osd01.vs.com
ceph-osd02.vs.com
ceph-osd03.vs.com

[ocp]
master01.vs.com
master02.vs.com
master03.vs.com
worker01.vs.com
worker02.vs.com
worker03.vs.com
worker04.vs.com
EOF
#------ Update dnsmasq file -----#
touch /etc/dnsmasq.d/$DOMAIN
cat <<EOF > /etc/dnsmasq.d/$DOMAIN
no-dhcp-interface=$NWINTF
bogus-priv
domain=$DOMAIN
expand-hosts
local=/$DOMAIN/
domain-needed
no-resolv
no-poll
server=8.8.8.8
server=8.8.4.4
address=/.apps.master01.vs.com/$DNSIP
EOF

systemctl disable firewalld
systemctl stop firewalld

yum install bind bind-utils -y
systemctl enable dnsmasq
systemctl start dnsmasq
systemctl restart dnsmasq
dnsmasq --test
dig ap.apps.master01.vs.com